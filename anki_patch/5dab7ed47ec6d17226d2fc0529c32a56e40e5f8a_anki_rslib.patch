From 480a572137a51316bab2d97f2435cdfe328c462c Mon Sep 17 00:00:00 2001
From: dobefore <1432338032@qq.com>
Date: Sun, 27 Mar 2022 11:09:31 +0800
Subject: [PATCH] create patch

---
 rslib/src/backend/mod.rs    |  2 +-
 rslib/src/collection/mod.rs |  2 +-
 rslib/src/lib.rs            |  4 ++--
 rslib/src/media/files.rs    |  6 +++---
 rslib/src/media/sync.rs     | 40 ++++++++++++++++++++-----------------
 5 files changed, 29 insertions(+), 25 deletions(-)

diff --git a/rslib/src/backend/mod.rs b/rslib/src/backend/mod.rs
index b4ec28cfa..4261a1d5f 100644
--- a/rslib/src/backend/mod.rs
+++ b/rslib/src/backend/mod.rs
@@ -70,7 +70,7 @@ use crate::{
 };
 
 pub struct Backend {
-    col: Arc<Mutex<Option<Collection>>>,
+    pub col: Arc<Mutex<Option<Collection>>>,
     tr: I18n,
     server: bool,
     sync_abort: AbortHandleSlot,
diff --git a/rslib/src/collection/mod.rs b/rslib/src/collection/mod.rs
index e1222804f..9e31460c5 100644
--- a/rslib/src/collection/mod.rs
+++ b/rslib/src/collection/mod.rs
@@ -125,7 +125,7 @@ pub struct CollectionState {
 pub struct Collection {
     pub(crate) storage: SqliteStorage,
     #[allow(dead_code)]
-    pub(crate) col_path: PathBuf,
+    pub col_path: PathBuf,
     pub(crate) media_folder: PathBuf,
     pub(crate) media_db: PathBuf,
     pub(crate) tr: I18n,
diff --git a/rslib/src/lib.rs b/rslib/src/lib.rs
index 9e03edc38..586ecb7a2 100644
--- a/rslib/src/lib.rs
+++ b/rslib/src/lib.rs
@@ -5,7 +5,7 @@
 
 pub mod adding;
 pub mod backend;
-mod backend_proto;
+pub mod backend_proto;
 pub mod browser_table;
 pub mod card;
 pub mod card_rendering;
@@ -36,7 +36,7 @@ pub mod search;
 pub mod serde;
 mod stats;
 pub mod storage;
-mod sync;
+pub mod sync;
 pub mod tags;
 pub mod template;
 pub mod template_filters;
diff --git a/rslib/src/media/files.rs b/rslib/src/media/files.rs
index b56b1baa3..6921c1318 100644
--- a/rslib/src/media/files.rs
+++ b/rslib/src/media/files.rs
@@ -87,7 +87,7 @@ fn nonbreaking_space(char: char) -> bool {
 /// - Any problem characters are removed.
 /// - Windows device names like CON and PRN have '_' appended
 /// - The filename is limited to 120 bytes.
-pub(crate) fn normalize_filename(fname: &str) -> Cow<str> {
+pub fn normalize_filename(fname: &str) -> Cow<str> {
     let mut output = Cow::Borrowed(fname);
 
     if !is_nfc(output.as_ref()) {
@@ -302,7 +302,7 @@ pub(crate) fn sha1_of_file(path: &Path) -> io::Result<[u8; 20]> {
 }
 
 /// Return the SHA1 of provided data.
-pub(crate) fn sha1_of_data(data: &[u8]) -> [u8; 20] {
+pub fn sha1_of_data(data: &[u8]) -> [u8; 20] {
     let mut hasher = Sha1::new();
     hasher.update(data);
     hasher.digest().bytes()
@@ -415,7 +415,7 @@ pub(super) fn add_file_from_ankiweb(
     })
 }
 
-pub(super) fn data_for_file(media_folder: &Path, fname: &str) -> Result<Option<Vec<u8>>> {
+pub fn data_for_file(media_folder: &Path, fname: &str) -> Result<Option<Vec<u8>>> {
     let mut file = match fs::File::open(&media_folder.join(fname)) {
         Ok(file) => file,
         Err(e) => {
diff --git a/rslib/src/media/sync.rs b/rslib/src/media/sync.rs
index da50eda88..14664bbe9 100644
--- a/rslib/src/media/sync.rs
+++ b/rslib/src/media/sync.rs
@@ -1,5 +1,9 @@
 // Copyright: Ankitects Pty Ltd and contributors
 // License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
+pub use unicode_normalization;
+pub use zip;
+pub use tokio::io::BufWriter;
+pub use hex;
 
 use std::{
     borrow::Cow,
@@ -59,17 +63,17 @@ where
     log: Logger,
 }
 
-#[derive(Debug, Deserialize)]
-struct SyncBeginResult {
-    data: Option<SyncBeginResponse>,
-    err: String,
+#[derive(Debug,Serialize, Deserialize)]
+pub struct SyncBeginResult {
+    pub data: Option<SyncBeginResponse>,
+    pub err: String,
 }
 
-#[derive(Debug, Deserialize)]
-struct SyncBeginResponse {
+#[derive(Debug,Serialize, Deserialize)]
+pub struct SyncBeginResponse {
     #[serde(rename = "sk")]
-    sync_key: String,
-    usn: i32,
+    pub sync_key: String,
+    pub usn: i32,
 }
 
 #[derive(Debug, Clone, Copy)]
@@ -88,10 +92,10 @@ enum RequiredChange {
     RemovePending,
 }
 
-#[derive(Debug, Serialize)]
+#[derive(Debug, Serialize,Deserialize)]
 #[serde(rename_all = "camelCase")]
-struct RecordBatchRequest {
-    last_usn: i32,
+pub struct RecordBatchRequest {
+    pub last_usn: i32,
 }
 
 #[derive(Debug, Deserialize)]
@@ -131,15 +135,15 @@ struct UploadReply {
     current_usn: i32,
 }
 
-#[derive(Serialize)]
-struct FinalizeRequest {
-    local: u32,
+#[derive(Serialize,Deserialize)]
+pub struct FinalizeRequest {
+    pub local: u32,
 }
 
-#[derive(Debug, Deserialize)]
-struct FinalizeResponse {
-    data: Option<String>,
-    err: String,
+#[derive(Debug,Serialize, Deserialize)]
+pub struct FinalizeResponse {
+    pub data: Option<String>,
+    pub err: String,
 }
 
 fn media_sync_endpoint(host_number: u32) -> String {
-- 
2.28.0.windows.1

